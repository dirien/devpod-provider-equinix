/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the RecoveryCodeList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoveryCodeList{}

// RecoveryCodeList struct for RecoveryCodeList
type RecoveryCodeList struct {
	RecoveryCodes        []string `json:"recovery_codes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RecoveryCodeList RecoveryCodeList

// NewRecoveryCodeList instantiates a new RecoveryCodeList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoveryCodeList() *RecoveryCodeList {
	this := RecoveryCodeList{}
	return &this
}

// NewRecoveryCodeListWithDefaults instantiates a new RecoveryCodeList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoveryCodeListWithDefaults() *RecoveryCodeList {
	this := RecoveryCodeList{}
	return &this
}

// GetRecoveryCodes returns the RecoveryCodes field value if set, zero value otherwise.
func (o *RecoveryCodeList) GetRecoveryCodes() []string {
	if o == nil || IsNil(o.RecoveryCodes) {
		var ret []string
		return ret
	}
	return o.RecoveryCodes
}

// GetRecoveryCodesOk returns a tuple with the RecoveryCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoveryCodeList) GetRecoveryCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.RecoveryCodes) {
		return nil, false
	}
	return o.RecoveryCodes, true
}

// HasRecoveryCodes returns a boolean if a field has been set.
func (o *RecoveryCodeList) HasRecoveryCodes() bool {
	if o != nil && !IsNil(o.RecoveryCodes) {
		return true
	}

	return false
}

// SetRecoveryCodes gets a reference to the given []string and assigns it to the RecoveryCodes field.
func (o *RecoveryCodeList) SetRecoveryCodes(v []string) {
	o.RecoveryCodes = v
}

func (o RecoveryCodeList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoveryCodeList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecoveryCodes) {
		toSerialize["recovery_codes"] = o.RecoveryCodes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RecoveryCodeList) UnmarshalJSON(data []byte) (err error) {
	varRecoveryCodeList := _RecoveryCodeList{}

	err = json.Unmarshal(data, &varRecoveryCodeList)

	if err != nil {
		return err
	}

	*o = RecoveryCodeList(varRecoveryCodeList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "recovery_codes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRecoveryCodeList struct {
	value *RecoveryCodeList
	isSet bool
}

func (v NullableRecoveryCodeList) Get() *RecoveryCodeList {
	return v.value
}

func (v *NullableRecoveryCodeList) Set(val *RecoveryCodeList) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoveryCodeList) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoveryCodeList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoveryCodeList(val *RecoveryCodeList) *NullableRecoveryCodeList {
	return &NullableRecoveryCodeList{value: val, isSet: true}
}

func (v NullableRecoveryCodeList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoveryCodeList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
